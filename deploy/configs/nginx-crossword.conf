# Nginx configuration for crossword.mittonvillage.com
# Place this file in /etc/nginx/sites-available/crossword.mittonvillage.com
# Then create a symlink: ln -s /etc/nginx/sites-available/crossword.mittonvillage.com /etc/nginx/sites-enabled/

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

# Upstream servers
upstream crossword_backend {
    server localhost:5001;
    keepalive 32;
}

upstream crossword_frontend {
    server localhost:3001;
    keepalive 32;
}

server {
    listen 80;
    server_name crossword.mittonvillage.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name crossword.mittonvillage.com;

    # SSL Configuration (will be managed by certbot)
    ssl_certificate /etc/letsencrypt/live/crossword.mittonvillage.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/crossword.mittonvillage.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # CSP for Three.js and web workers support
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' blob:; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' https: wss: ws:; worker-src 'self' blob:" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Root directory for static files
    root /var/www/crossword;

    # Logs
    access_log /var/log/nginx/crossword_access.log;
    error_log /var/log/nginx/crossword_error.log;

    # API routes - Backend
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://crossword_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Authentication routes with stricter rate limiting
    location ~ ^/api/(auth|register|login) {
        limit_req zone=auth burst=10 nodelay;
        
        proxy_pass http://crossword_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Next.js static files
    location /_next/static/ {
        proxy_pass http://crossword_frontend;
        proxy_cache_valid 200 1y;
        add_header Cache-Control "public, immutable";
    }

    # Next.js images
    location /_next/image {
        proxy_pass http://crossword_frontend;
        proxy_cache_valid 200 1w;
    }

    # Frontend - Next.js application
    location / {
        proxy_pass http://crossword_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable caching for HTML files
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # Favicon and robots.txt
    location = /favicon.ico {
        proxy_pass http://crossword_frontend;
        access_log off;
        expires 1y;
    }

    location = /robots.txt {
        proxy_pass http://crossword_frontend;
        access_log off;
        expires 1w;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}